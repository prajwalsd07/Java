package Day21;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

class counter2 {
	int c = 0;

	synchronized int increment() throws InterruptedException {

		for (int i = 0; i <= 5; i++) {
			System.out.println(Thread.currentThread().getName());
			Thread.sleep(100);
			c++;
		}
		return c;

	}
}

class objectCreate2 implements Runnable {
	counter2 c = new counter2();

	@Override
	public void run() {

		try {
			c.increment();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

	}

}

public class FutureExample {

	public static void main(String[] args) throws InterruptedException {

		objectCreate2 o = new objectCreate2();
		
		//ExecutorService exe = Executors.newFixedThreadPool(5);
		int core = Runtime.getRuntime().availableProcessors();
		System.out.println(core);
		ExecutorService exe = Executors.newFixedThreadPool(core);
		
		for(int i = 0; i<5;i++)
		{
			exe.execute(o);
		}
		
		exe.shutdown();

	}

}
